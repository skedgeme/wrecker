name:                wrecker
version:             0.1.1.2
synopsis:            A HTTP Performance Benchmarker
description:
 'wrecker' is a library for creating HTTP benchmarks. It is designed for
 benchmarking a series of HTTP request were the output of previous requests
 are used as inputs to the next request. This is useful for complex API
 profiling situations.


 'wrecker' does not provide any mechanism for making HTTP calls. It works
 with any HTTP client that produces a 'HttpException' during failure (so
 http-client and wreq will work out of the box).


 See the documentation for examples of how to use 'wrecker' with
 benchmarking scripts.
homepage:            https://github.com/skedgeme/wrecker#readme
license:             BSD3
license-file:        LICENSE
author:              Jonathan Fischoff
maintainer:          jonathangfischoff@gmail.com
copyright:           2016 skedge.me
category:            Web
build-type:          Simple
-- extra-source-files:
cabal-version:       >=1.10

library
  hs-source-dirs: src
  exposed-modules: Wrecker
                 , Wrecker.Recorder
                 , Wrecker.Runner
                 , Wrecker.Main
                 , Wrecker.Options
                 , Wrecker.Statistics
                 , Wrecker.Logger
                 , Network.Wreq.Wrecker
  build-depends: base >= 4.7 && < 5
               , stm
               , stm-chans
               , statistics
               , vector
               , bytestring
               , aeson
               , unix
               , ansigraph
               , time
               , clock
               , text
               , http-client
               , http-types
               , tabular
               , deepseq
               , unordered-containers
               , threads
               , vty
               , threads-extras
               , clock-extras
               , optparse-applicative
               , ansi-terminal
               , unagi-chan
               , next-ref
               , immortal
               , wreq
               , connection
               , http-client-tls >= 0.3.3 && < 0.4
               , data-default
               , network-uri
  default-language:    Haskell2010
  ghc-options:         -Wall -fno-warn-unused-do-bind -pgmL markdown-unlit

executable example-server
  hs-source-dirs:      examples
  main-is:             Server.hs
  build-depends:       base
                     , wrecker
                     , scotty
                     , aeson-qq
                     , warp
                     , markdown-unlit
                     , aeson
                     , text
                     , immortal
                     , next-ref
                     , wai
                     , network
  cpp-options: -D_SERVER_IS_MAIN_
  ghc-options: -O2 -Wall -Wno-unused-do-bind -Wno-unused-top-binds -threaded -pgmL markdown-unlit -rtsopts -with-rtsopts=-N
  default-language:    Haskell2010

executable example-client
  hs-source-dirs:      examples
  main-is:             Client.lhs
  build-depends:       base
                     , wrecker
                     , wreq
                     , markdown-unlit
                     , aeson
                     , bytestring
                     , text
                     , http-client
                     , connection
  cpp-options: -D_CLIENT_IS_MAIN_
  ghc-options: -O2 -Wall -Wno-unused-top-binds -Wno-unused-do-bind -threaded -pgmL markdown-unlit -rtsopts -with-rtsopts=-N
  default-language:    Haskell2010

executable example
  hs-source-dirs:      examples
  main-is:             Main.lhs
  build-depends:       base
                     , wrecker
                     , scotty
                     , aeson-qq
                     , warp
                     , wreq
                     , markdown-unlit
                     , aeson
                     , bytestring
                     , text
                     , http-client
                     , connection
                     , immortal
                     , next-ref
                     , wai
                     , network
                     , connection
  ghc-options: -O2 -Wall -Wno-unused-do-bind -O2 -threaded -pgmL markdown-unlit  -rtsopts -with-rtsopts=-N
  default-language:    Haskell2010

test-suite wrecker-test
  type:                exitcode-stdio-1.0
  hs-source-dirs:      test, examples
  main-is:             Spec.hs
  build-depends: base
               , wrecker
               , hspec
               , hspec-discover
               , scotty
               , aeson-qq
               , warp
               , wreq
               , markdown-unlit
               , aeson
               , bytestring
               , text
               , http-client
               , unordered-containers
               , wai
               , network
               , immortal
               , next-ref
               , connection
  ghc-options: -Wall -Wno-unused-do-bind -O2 -threaded  -pgmL markdown-unlit -rtsopts -with-rtsopts=-N
  default-language:    Haskell2010
